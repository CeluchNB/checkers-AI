{"ast":null,"code":"var _jsxFileName = \"/Users/noahceluch/Documents/checkers/src/Game.js\";\nimport React, { Component } from 'react';\nimport Board from './Board';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleStateChange = (blackTurn, isWin) => {\n      this.setState({\n        buttonClick: false\n      });\n\n      if (this.state.gameType === 2) {\n        this.setState({\n          message: \"Click for next move\"\n        });\n        return;\n      }\n\n      if (blackTurn === true && isWin === false) {\n        this.setState({\n          message: \"Black's turn\"\n        });\n      } else if (blackTurn === false && isWin === false) {\n        this.setState({\n          message: \"Red's turn\"\n        });\n      } else if (blackTurn === true && isWin === true) {\n        this.setState({\n          message: \"Black wins\"\n        });\n      } else {\n        this.setState({\n          message: \"Red wins\"\n        });\n      }\n    };\n\n    this.state = {\n      message: \"Black's turn\",\n      gameType: 1,\n      buttonClick: false\n    };\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.startHvH = this.startHvH.bind(this);\n    this.startHvAI = this.startHvAI.bind(this);\n    this.startAIvAI = this.startAIvAI.bind(this);\n  }\n\n  startHvH() {\n    this.setState({\n      gameType: 1,\n      buttonClick: true,\n      message: \"Black's Turn\"\n    });\n  }\n\n  startHvAI() {\n    this.setState({\n      gameType: 2,\n      buttonClick: true,\n      message: \"Black's Turn\"\n    });\n  }\n\n  startAIvAI() {\n    this.setState({\n      gameType: 3,\n      buttonClick: true,\n      message: \"Black's Turn\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        margin: \"auto\",\n        width: 350,\n        padding: \"1rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Human v. AI Checkers\"), React.createElement(Board, {\n      handleChange: this.handleStateChange,\n      gameType: this.state.gameType,\n      buttonClick: this.state.buttonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      id: \"message\",\n      style: {\n        margin: \"auto\",\n        width: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      id: \"buttons\",\n      style: {\n        width: 350,\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.startHvH,\n      style: {\n        margin: \"0.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Human vs. Human\"), React.createElement(\"button\", {\n      onClick: this.startHvAI,\n      style: {\n        margin: \"0.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Human vs. AI\"), React.createElement(\"button\", {\n      onClick: this.startAIvAI,\n      style: {\n        margin: \"0.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"AI vs. AI\")));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/noahceluch/Documents/checkers/src/Game.js"],"names":["React","Component","Board","Game","constructor","props","handleStateChange","blackTurn","isWin","setState","buttonClick","state","gameType","message","bind","startHvH","startHvAI","startAIvAI","render","margin","width","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Board from './Board';\n\nclass Game extends Component  {\n\n  constructor(props) {\n    super(props);\n    this.state = { message: \"Black's turn\", gameType: 1, buttonClick: false };\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.startHvH = this.startHvH.bind(this);\n    this.startHvAI = this.startHvAI.bind(this);\n    this.startAIvAI = this.startAIvAI.bind(this);\n\n\n  }\n\n  handleStateChange = (blackTurn, isWin) => {\n    this.setState({buttonClick: false});\n    if(this.state.gameType === 2) {\n      this.setState({ message: \"Click for next move\" });\n      return;\n    }\n    if(blackTurn === true && isWin === false) {\n      this.setState({ message: \"Black's turn\" });\n    } else if (blackTurn === false && isWin === false) {\n      this.setState({ message: \"Red's turn\" });\n    } else if (blackTurn === true && isWin === true) {\n      this.setState({ message: \"Black wins\" });\n    } else {\n      this.setState({ message: \"Red wins\" });\n    }\n  }\n\n  startHvH() {\n    this.setState({gameType: 1, buttonClick: true, message: \"Black's Turn\"});\n  }\n\n  startHvAI() {\n    this.setState({gameType: 2, buttonClick: true, message: \"Black's Turn\"});\n  }\n\n  startAIvAI() {\n    this.setState({gameType: 3, buttonClick: true, message: \"Black's Turn\"})\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <h1 style={{margin: \"auto\", width: 350, padding: \"1rem\"}}>Human v. AI Checkers</h1>\n        <Board handleChange={this.handleStateChange} gameType={this.state.gameType} buttonClick={this.state.buttonClick}/>\n        <h3 id=\"message\" style={{margin: \"auto\", width: 150}}>{this.state.message}</h3>\n        <div id=\"buttons\" style={{width: 350, margin: \"auto\"}}>\n          <button onClick={this.startHvH} style={{margin: \"0.5rem\"}}>Human vs. Human</button>\n          <button onClick={this.startHvAI} style={{margin: \"0.5rem\"}}>Human vs. AI</button>\n          <button onClick={this.startAIvAI} style={{margin: \"0.5rem\"}}>AI vs. AI</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}