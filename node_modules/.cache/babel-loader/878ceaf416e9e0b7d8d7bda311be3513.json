{"ast":null,"code":"var _jsxFileName = \"/Users/noahceluch/Documents/checkers/src/Board.js\";\nimport React, { Component } from 'react';\nimport Row from './Row';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSquareClick = position => {\n      if (this.state.waitingForMove === true) {\n        if (this.isValidMove(position)) {\n          this.removePiece(this.state.movingPiece, this.state.blackTurn);\n          this.addPiece(position, this.state.blackTurn);\n\n          if (position.jump === true) {\n            var removingPiece = position.jumpedPiece;\n            this.removePiece(removingPiece, !this.state.blackTurn);\n          }\n\n          this.setState({\n            movingPiece: {\n              row: -1,\n              column: -1\n            }\n          });\n          this.setState({\n            validSpaces: []\n          });\n          this.setState({\n            waitingForMove: false\n          });\n          this.setState({\n            blackTurn: !this.state.blackTurn\n          }, () => {\n            this.props.handleChange(this.state.blackTurn);\n          });\n        } else {\n          var moves = this.getValidMoves(position);\n\n          if (moves.length > 0) {\n            this.setState({\n              validSpaces: moves\n            });\n            this.setState({\n              movingPiece: position\n            });\n          }\n        }\n      } else {\n        if (this.state.blackTurn && this.blackContains(position) || !this.state.blackTurn && this.redContains(position)) {\n          var moves = this.getValidMoves(position);\n\n          if (moves.length > 0) {\n            this.setState({\n              validSpaces: moves\n            });\n            this.setState({\n              movingPiece: position\n            });\n            this.setState({\n              waitingForMove: true\n            });\n          }\n        }\n      }\n      /*\n        if waiting\n          if position is valid move\n            move\n            waiting = false\n            if jump\n              if black\n             change turn\n          else if position is valid\n            change moving piece\n        else\n          if position is valid\n            if black's turn and black contains position\n              change moving piece\n              waiting = true\n            else if red's turn and red contains position\n              change moving piece\n              waiting = true\n      */\n\n    };\n\n    this.state = {\n      board: {\n        black: [{\n          row: 0,\n          column: 1\n        }, {\n          row: 0,\n          column: 3\n        }, {\n          row: 0,\n          column: 5\n        }, {\n          row: 0,\n          column: 7\n        }, {\n          row: 1,\n          column: 0\n        }, {\n          row: 1,\n          column: 2\n        }, {\n          row: 1,\n          column: 4\n        }, {\n          row: 1,\n          column: 6\n        }, {\n          row: 2,\n          column: 1\n        }, {\n          row: 2,\n          column: 3\n        }, {\n          row: 2,\n          column: 5\n        }, {\n          row: 2,\n          column: 7\n        }],\n        red: [{\n          row: 5,\n          column: 0\n        }, {\n          row: 5,\n          column: 2\n        }, {\n          row: 5,\n          column: 4\n        }, {\n          row: 5,\n          column: 6\n        }, {\n          row: 6,\n          column: 1\n        }, {\n          row: 6,\n          column: 3\n        }, {\n          row: 6,\n          column: 5\n        }, {\n          row: 6,\n          column: 7\n        }, {\n          row: 7,\n          column: 0\n        }, {\n          row: 7,\n          column: 2\n        }, {\n          row: 7,\n          column: 4\n        }, {\n          row: 7,\n          column: 6\n        }]\n      },\n      validSpaces: [],\n      movingPiece: {\n        row: -1,\n        column: -1\n      },\n      blackTurn: true,\n      waitingForMove: false,\n      validPositionClicked: false\n    };\n    this.handleSquareClick = this.handleSquareClick.bind(this);\n  }\n\n  isValidMove(position) {\n    for (var i = 0; i < this.state.validSpaces.length; i++) {\n      if (this.state.validSpaces[i].column === position.column && this.state.validSpaces[i].row === position.row) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  blackContains(position) {\n    for (var i = 0; i < this.state.board.black.length; i++) {\n      if (this.state.board.black[i].row === position.row && this.state.board.black[i].column === position.column) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  redContains(position) {\n    for (var i = 0; i < this.state.board.black.length; i++) {\n      if (this.state.board.red[i].row === position.row && this.state.board.red[i].column === position.column) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getValidMoves(position) {\n    var moves = [];\n\n    if (this.blackContains(position) || this.redContains(position)) {\n      for (var i = -1; i < 2; i++) {\n        for (var j = -1; j < 2; j++) {\n          if (i !== 0 && j !== 0) {\n            var pos = {\n              row: position.row + i,\n              column: position.column + j,\n              jump: false\n            };\n\n            if (!this.blackContains(pos) && !this.redContains(pos)) {\n              moves.push(pos);\n            }\n\n            var jumpPos = this.getValidJump(position, i, j);\n            moves.push(jumpPos);\n          }\n        }\n      }\n    }\n\n    return moves;\n  }\n\n  removePiece(position, black) {\n    if (black === true) {\n      for (var i = 0; i < this.state.board.black.length; i++) {\n        if (this.state.board.black[i].row === position.row && this.state.board.black[i].column === position.column) {\n          this.state.board.black.splice(i, 1);\n        }\n      }\n    } else {\n      for (var i = 0; i < this.state.board.red.length; i++) {\n        if (this.state.board.red[i].row === position.row && this.state.board.red[i].column === position.column) {\n          this.state.board.red.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  addPiece(position, black) {\n    if (black === true) {\n      this.state.board.black.push(position);\n    } else {\n      this.state.board.red.push(position);\n    }\n  }\n\n  getValidJump(curPos, i, j) {\n    var newPos = {\n      row: curPos.row + i,\n      column: curPos.column + j\n    };\n    var jumpPos = {\n      row: newPos.row + i,\n      column: newPos.column + j,\n      jump: true,\n      jumpedPiece: newPos\n    };\n\n    if (this.blackContains(curPos)) {\n      if (this.redContains(newPos) && !this.blackContains(jumpPos) && !this.redContains(jumpPos)) {\n        return jumpPos;\n      }\n    }\n\n    if (this.redContains(curPos)) {\n      if (this.blackContains(newPos) && !this.blackContains(jumpPos) && !this.redContains(jumpPos)) {\n        return jumpPos;\n      }\n    }\n\n    return [];\n  }\n\n  render() {\n    var rows = [];\n\n    for (var i = 0; i < 8; i++) {\n      rows.push(React.createElement(Row, {\n        row: i,\n        key: i,\n        board: this.state.board,\n        handleSquareClick: this.handleSquareClick,\n        validSpaces: this.state.validSpaces,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        width: 480,\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, rows);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/noahceluch/Documents/checkers/src/Board.js"],"names":["React","Component","Row","Board","constructor","props","handleSquareClick","position","state","waitingForMove","isValidMove","removePiece","movingPiece","blackTurn","addPiece","jump","removingPiece","jumpedPiece","setState","row","column","validSpaces","handleChange","moves","getValidMoves","length","blackContains","redContains","board","black","red","validPositionClicked","bind","i","j","pos","push","jumpPos","getValidJump","splice","curPos","newPos","render","rows","border","width","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Row from './Row';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      board: {\n        black: [\n                {row: 0, column: 1}, {row: 0, column: 3}, {row: 0, column: 5}, {row: 0, column: 7},\n                {row: 1, column: 0}, {row: 1, column: 2}, {row: 1, column: 4}, {row: 1, column: 6},\n                {row: 2, column: 1}, {row: 2, column: 3}, {row: 2, column: 5}, {row: 2, column: 7}\n        ],\n        red: [\n                {row: 5, column: 0}, {row: 5, column: 2}, {row: 5, column: 4}, {row: 5, column: 6},\n                {row: 6, column: 1}, {row: 6, column: 3}, {row: 6, column: 5}, {row: 6, column: 7},\n                {row: 7, column: 0}, {row: 7, column: 2}, {row: 7, column: 4}, {row: 7, column: 6}\n        ]\n      },\n      validSpaces: [],\n      movingPiece: {row: -1, column: -1},\n      blackTurn: true,\n      waitingForMove: false,\n      validPositionClicked: false\n    }\n    this.handleSquareClick = this.handleSquareClick.bind(this);\n  }\n\n  handleSquareClick = (position) => {\n\n    if(this.state.waitingForMove === true) {\n      if(this.isValidMove(position)) {\n        this.removePiece(this.state.movingPiece, this.state.blackTurn);\n        this.addPiece(position, this.state.blackTurn);\n\n        if (position.jump === true) {\n          var removingPiece = position.jumpedPiece;\n          this.removePiece(removingPiece, !this.state.blackTurn);\n        }\n\n        this.setState({ movingPiece: { row: -1, column: -1 } });\n        this.setState({ validSpaces: [] });\n        this.setState({ waitingForMove: false });\n        this.setState({ blackTurn: !this.state.blackTurn }, () => { this.props.handleChange(this.state.blackTurn); });\n      } else {\n        var moves = this.getValidMoves(position);\n        if(moves.length > 0) {\n          this.setState({ validSpaces: moves });\n          this.setState({ movingPiece: position});\n        }\n      }\n    } else {\n      if((this.state.blackTurn && this.blackContains(position)) || (!this.state.blackTurn && this.redContains(position))) {\n        var moves = this.getValidMoves(position);\n        if(moves.length > 0) {\n          this.setState({ validSpaces: moves });\n          this.setState({ movingPiece: position});\n          this.setState({ waitingForMove: true });\n        }\n      }\n    }\n\n    /*\n      if waiting\n        if position is valid move\n          move\n          waiting = false\n          if jump\n            if black\n\n          change turn\n        else if position is valid\n          change moving piece\n      else\n        if position is valid\n          if black's turn and black contains position\n            change moving piece\n            waiting = true\n          else if red's turn and red contains position\n            change moving piece\n            waiting = true\n    */\n  }\n\n  isValidMove(position) {\n    for(var i = 0; i < this.state.validSpaces.length; i++) {\n      if(this.state.validSpaces[i].column === position.column\n        && this.state.validSpaces[i].row === position.row) {\n          return true;\n        }\n    }\n    return false;\n  }\n\n  blackContains(position) {\n    for (var i = 0; i < this.state.board.black.length; i++) {\n      if (this.state.board.black[i].row === position.row && this.state.board.black[i].column === position.column) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  redContains(position) {\n    for (var i = 0; i < this.state.board.black.length; i++) {\n      if (this.state.board.red[i].row === position.row && this.state.board.red[i].column === position.column) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getValidMoves(position) {\n    var moves = [];\n    if(this.blackContains(position) || this.redContains(position)) {\n      for(var i = -1; i < 2; i++) {\n        for(var j = -1; j < 2; j++) {\n          if(i !== 0 && j !== 0) {\n            var pos = {row: position.row + i, column: position.column + j, jump: false};\n            if(!this.blackContains(pos) && !this.redContains(pos)) {\n              moves.push(pos);\n            }\n            var jumpPos = this.getValidJump(position, i, j);\n            moves.push(jumpPos);\n          }\n        }\n      }\n    }\n    return moves;\n  }\n\n  removePiece(position, black) {\n    if(black === true) {\n      for(var i = 0; i < this.state.board.black.length; i++) {\n        if(this.state.board.black[i].row === position.row && this.state.board.black[i].column === position.column) {\n          this.state.board.black.splice(i, 1);\n        }\n      }\n    } else {\n      for(var i = 0; i < this.state.board.red.length; i++) {\n        if(this.state.board.red[i].row === position.row && this.state.board.red[i].column === position.column) {\n          this.state.board.red.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  addPiece(position, black) {\n    if(black === true) {\n      this.state.board.black.push(position);\n    } else {\n      this.state.board.red.push(position);\n    }\n  }\n\n  getValidJump(curPos, i, j) {\n    var newPos = {row: curPos.row + i, column: curPos.column + j};\n    var jumpPos = {row: newPos.row + i, column: newPos.column + j, jump: true, jumpedPiece: newPos};\n    if(this.blackContains(curPos)) {\n      if(this.redContains(newPos) && !this.blackContains(jumpPos) && !this.redContains(jumpPos)) {\n        return jumpPos;\n      }\n    }\n    if(this.redContains(curPos)) {\n      if(this.blackContains(newPos) && !this.blackContains(jumpPos) && !this.redContains(jumpPos)) {\n        return jumpPos;\n      }\n    }\n    return [];\n  }\n\n  render() {\n    var rows = [];\n    for(var i = 0; i < 8; i++) {\n      rows.push(<Row row={i} key={i}\n        board={this.state.board}\n        handleSquareClick={this.handleSquareClick}\n        validSpaces={this.state.validSpaces} />);\n    }\n    return <div style={{border: \"1px solid black\", width: 480, margin:\"auto\"}}>{rows}</div>;\n  }\n\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}