{"ast":null,"code":"var _jsxFileName = \"/Users/noahceluch/Documents/checkers/src/Board.js\";\nimport React, { Component } from 'react';\nimport Row from './Row';\nimport { getAllValidMoves, executeMove, getNextBoards, minimax } from './MiniMax';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSquareClick = position => {\n      if (this.state.waitingForMove === true) {\n        if (this.isValidMove(position)) {\n          if (this.isJump(position) === true) {\n            var removingPiece = this.getJumpedPiece(position);\n            this.removePiece(removingPiece, !this.state.blackTurn);\n            this.removePiece(this.state.movingPiece, this.state.blackTurn);\n            this.addPiece(position, this.state.blackTurn);\n\n            if (this.checkWin(this.state.blackTurn)) {\n              this.props.handleChange(this.state.blackTurn, true);\n              return;\n            }\n          } else {\n            this.removePiece(this.state.movingPiece, this.state.blackTurn);\n            this.addPiece(position, this.state.blackTurn);\n          }\n\n          this.setState({\n            movingPiece: {\n              row: -1,\n              column: -1\n            }\n          });\n          this.setState({\n            validSpaces: []\n          });\n          this.setState({\n            waitingForMove: false\n          });\n          this.setState({\n            blackTurn: !this.state.blackTurn\n          }, () => {\n            this.props.handleChange(this.state.blackTurn, false);\n            this.aiMove();\n          });\n        } else {\n          if (this.state.blackTurn && this.blackContains(position) || !this.state.blackTurn && this.redContains(position)) {\n            var moves = this.getValidMoves(position);\n\n            if (moves.length > 0) {\n              this.setState({\n                validSpaces: moves\n              });\n              this.setState({\n                movingPiece: position\n              });\n            }\n          }\n        }\n      } else {\n        if (this.state.blackTurn && this.blackContains(position) || !this.state.blackTurn && this.redContains(position)) {\n          if (this.state.blackTurn && this.state.blackHuman || !this.state.blackTurn && this.state.redHuman) {\n            var moves = this.getValidMoves(position);\n\n            if (moves.length > 0) {\n              this.setState({\n                validSpaces: moves\n              });\n              this.setState({\n                movingPiece: position\n              });\n              this.setState({\n                waitingForMove: true\n              });\n            }\n          }\n        }\n      }\n    };\n\n    this.state = {\n      board: {\n        black: [{\n          row: 0,\n          column: 1\n        }, {\n          row: 0,\n          column: 3\n        }, {\n          row: 0,\n          column: 5\n        }, {\n          row: 0,\n          column: 7\n        }, {\n          row: 1,\n          column: 0\n        }, {\n          row: 1,\n          column: 2\n        }, {\n          row: 1,\n          column: 4\n        }, {\n          row: 1,\n          column: 6\n        }, {\n          row: 2,\n          column: 1\n        }, {\n          row: 2,\n          column: 3\n        }, {\n          row: 2,\n          column: 5\n        }, {\n          row: 2,\n          column: 7\n        }],\n        red: [{\n          row: 5,\n          column: 0\n        }, {\n          row: 5,\n          column: 2\n        }, {\n          row: 5,\n          column: 4\n        }, {\n          row: 5,\n          column: 6\n        }, {\n          row: 6,\n          column: 1\n        }, {\n          row: 6,\n          column: 3\n        }, {\n          row: 6,\n          column: 5\n        }, {\n          row: 6,\n          column: 7\n        }, {\n          row: 7,\n          column: 0\n        }, {\n          row: 7,\n          column: 2\n        }, {\n          row: 7,\n          column: 4\n        }, {\n          row: 7,\n          column: 6\n        }]\n      },\n      validSpaces: [],\n      movingPiece: {\n        row: -1,\n        column: -1\n      },\n      blackTurn: true,\n      waitingForMove: false,\n      validPositionClicked: false,\n      blackHuman: false,\n      redHuman: true\n    };\n    var boards = minimax(this.state.board, true, 0, -10000, 10000, true);\n    console.log(boards);\n    this.handleSquareClick = this.handleSquareClick.bind(this);\n  }\n\n  aiMove() {\n    if (this.state.blackTurn && !this.state.blackHuman || !this.state.blackTurn && !this.state.redHuman) {\n      /*var remPos = {row: 5, column: 0};\n      var newPos = {row: 4, column: 1};*/\n      var newBoard = minimax(this.state.board, true, 0, -10000, 10000, false);\n\n      if (this.state.blackTurn) {\n        this.setState({\n          board: newBoard\n        });\n      } else {\n        this.setState({\n          board: newBoard\n        });\n      }\n      /*this.removePiece(remPos, this.state.blackTurn);\n      this.addPiece(newPos, this.state.blackTurn);*/\n\n\n      this.setState({\n        blackTurn: !this.state.blackTurn\n      }, () => {\n        this.props.handleChange(this.state.blackTurn, false);\n      });\n    }\n  }\n\n  isValidMove(position) {\n    for (var i = 0; i < this.state.validSpaces.length; i++) {\n      if (this.state.validSpaces[i].column === position.column && this.state.validSpaces[i].row === position.row) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  isJump(position) {\n    for (var i = 0; i < this.state.validSpaces.length; i++) {\n      if (this.state.validSpaces[i].column === position.column && this.state.validSpaces[i].row === position.row && this.state.validSpaces[i].jump === true) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getJumpedPiece(position) {\n    for (var i = 0; i < this.state.validSpaces.length; i++) {\n      if (this.state.validSpaces[i].column === position.column && this.state.validSpaces[i].row === position.row && this.state.validSpaces[i].jump === true) {\n        return this.state.validSpaces[i].jumpedPiece;\n      }\n    }\n\n    return {\n      row: -1,\n      column: -1\n    };\n  }\n\n  blackContains(position) {\n    for (var i = 0; i < this.state.board.black.length; i++) {\n      if (this.state.board.black[i].row === position.row && this.state.board.black[i].column === position.column) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  redContains(position) {\n    for (var i = 0; i < this.state.board.red.length; i++) {\n      if (this.state.board.red[i].row === position.row && this.state.board.red[i].column === position.column) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getValidMoves(position) {\n    var moves = [];\n\n    if (this.blackContains(position) || this.redContains(position)) {\n      for (var i = -1; i < 2; i++) {\n        for (var j = -1; j < 2; j++) {\n          if (i !== 0 && j !== 0) {\n            var pos = {\n              row: position.row + i,\n              column: position.column + j,\n              jump: false\n            };\n\n            if (!this.blackContains(pos) && !this.redContains(pos)) {\n              moves.push(pos);\n            }\n\n            var jumpPos = this.getValidJump(position, i, j);\n            moves.push(jumpPos);\n          }\n        }\n      }\n    }\n\n    return moves;\n  }\n\n  removePiece(position, black) {\n    if (black === true) {\n      for (var i = 0; i < this.state.board.black.length; i++) {\n        if (this.state.board.black[i].row === position.row && this.state.board.black[i].column === position.column) {\n          this.state.board.black.splice(i, 1);\n        }\n      }\n    } else {\n      for (var i = 0; i < this.state.board.red.length; i++) {\n        if (this.state.board.red[i].row === position.row && this.state.board.red[i].column === position.column) {\n          this.state.board.red.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  addPiece(position, black) {\n    if (black === true) {\n      this.state.board.black.push(position);\n    } else {\n      this.state.board.red.push(position);\n    }\n  }\n\n  getValidJump(curPos, i, j) {\n    var newPos = {\n      row: curPos.row + i,\n      column: curPos.column + j\n    };\n    var jumpPos = {\n      row: newPos.row + i,\n      column: newPos.column + j,\n      jump: true,\n      jumpedPiece: newPos\n    };\n\n    if (this.blackContains(curPos)) {\n      if (this.redContains(newPos) && !this.blackContains(jumpPos) && !this.redContains(jumpPos)) {\n        return jumpPos;\n      }\n    }\n\n    if (this.redContains(curPos)) {\n      if (this.blackContains(newPos) && !this.blackContains(jumpPos) && !this.redContains(jumpPos)) {\n        return jumpPos;\n      }\n    }\n\n    return [];\n  }\n\n  checkWin(blackTurn) {\n    if (blackTurn === true) {\n      return this.state.board.red.length === 0;\n    } else {\n      return this.state.board.black.length === 0;\n    }\n  }\n\n  render() {\n    var rows = [];\n\n    for (var i = 0; i < 8; i++) {\n      rows.push(React.createElement(Row, {\n        row: i,\n        key: i,\n        board: this.state.board,\n        handleSquareClick: this.handleSquareClick,\n        validSpaces: this.state.validSpaces,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      style: {\n        border: \"1px solid black\",\n        width: 480,\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, rows);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/noahceluch/Documents/checkers/src/Board.js"],"names":["React","Component","Row","getAllValidMoves","executeMove","getNextBoards","minimax","Board","constructor","props","handleSquareClick","position","state","waitingForMove","isValidMove","isJump","removingPiece","getJumpedPiece","removePiece","blackTurn","movingPiece","addPiece","checkWin","handleChange","setState","row","column","validSpaces","aiMove","blackContains","redContains","moves","getValidMoves","length","blackHuman","redHuman","board","black","red","validPositionClicked","boards","console","log","bind","newBoard","i","jump","jumpedPiece","j","pos","push","jumpPos","getValidJump","splice","curPos","newPos","render","rows","border","width","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Row from './Row';\nimport { getAllValidMoves, executeMove, getNextBoards, minimax } from './MiniMax';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      board: {\n        black: [\n                {row: 0, column: 1}, {row: 0, column: 3}, {row: 0, column: 5}, {row: 0, column: 7},\n                {row: 1, column: 0}, {row: 1, column: 2}, {row: 1, column: 4}, {row: 1, column: 6},\n                {row: 2, column: 1}, {row: 2, column: 3}, {row: 2, column: 5}, {row: 2, column: 7}\n        ],\n        red: [\n                {row: 5, column: 0}, {row: 5, column: 2}, {row: 5, column: 4}, {row: 5, column: 6},\n                {row: 6, column: 1}, {row: 6, column: 3}, {row: 6, column: 5}, {row: 6, column: 7},\n                {row: 7, column: 0}, {row: 7, column: 2}, {row: 7, column: 4}, {row: 7, column: 6}\n        ]\n      },\n      validSpaces: [],\n      movingPiece: {row: -1, column: -1},\n      blackTurn: true,\n      waitingForMove: false,\n      validPositionClicked: false,\n      blackHuman: false,\n      redHuman: true\n    }\n\n    var boards = minimax(this.state.board, true, 0, -10000, 10000, true);\n    console.log(boards);\n\n    this.handleSquareClick = this.handleSquareClick.bind(this);\n  }\n\n  handleSquareClick = (position) => {\n\n    if(this.state.waitingForMove === true) {\n      if(this.isValidMove(position)) {\n\n        if (this.isJump(position) === true) {\n          var removingPiece = this.getJumpedPiece(position);\n          this.removePiece(removingPiece, !this.state.blackTurn);\n          this.removePiece(this.state.movingPiece, this.state.blackTurn);\n          this.addPiece(position, this.state.blackTurn);\n          if (this.checkWin(this.state.blackTurn)) {\n            this.props.handleChange(this.state.blackTurn, true);\n            return;\n          }\n        } else {\n          this.removePiece(this.state.movingPiece, this.state.blackTurn);\n          this.addPiece(position, this.state.blackTurn);\n        }\n\n        this.setState({ movingPiece: { row: -1, column: -1 } });\n        this.setState({ validSpaces: [] });\n        this.setState({ waitingForMove: false });\n        this.setState({ blackTurn: !this.state.blackTurn }, () => { this.props.handleChange(this.state.blackTurn, false); this.aiMove() });\n\n      } else {\n        if((this.state.blackTurn && this.blackContains(position)) || (!this.state.blackTurn && this.redContains(position))) {\n          var moves = this.getValidMoves(position);\n          if(moves.length > 0) {\n            this.setState({ validSpaces: moves });\n            this.setState({ movingPiece: position});\n          }\n        }\n      }\n    } else {\n      if((this.state.blackTurn && this.blackContains(position)) || (!this.state.blackTurn && this.redContains(position))) {\n        if((this.state.blackTurn && this.state.blackHuman) || (!this.state.blackTurn && this.state.redHuman)) {\n          var moves = this.getValidMoves(position);\n          if(moves.length > 0) {\n            this.setState({ validSpaces: moves });\n            this.setState({ movingPiece: position});\n            this.setState({ waitingForMove: true });\n          }\n        }\n      }\n    }\n  }\n\n  aiMove() {\n    if((this.state.blackTurn && !this.state.blackHuman) || (!this.state.blackTurn && !this.state.redHuman)) {\n      /*var remPos = {row: 5, column: 0};\n      var newPos = {row: 4, column: 1};*/\n      var newBoard = minimax(this.state.board, true, 0, -10000, 10000, false);\n      if(this.state.blackTurn) {\n        this.setState({ board: newBoard});\n      } else {\n        this.setState({ board: newBoard});\n      }\n      /*this.removePiece(remPos, this.state.blackTurn);\n      this.addPiece(newPos, this.state.blackTurn);*/\n      this.setState({ blackTurn: !this.state.blackTurn }, () => { this.props.handleChange(this.state.blackTurn, false); });\n    }\n  }\n\n\n  isValidMove(position) {\n    for(var i = 0; i < this.state.validSpaces.length; i++) {\n      if(this.state.validSpaces[i].column === position.column\n        && this.state.validSpaces[i].row === position.row) {\n          return true;\n        }\n    }\n    return false;\n  }\n\n  isJump(position) {\n    for(var i = 0; i < this.state.validSpaces.length; i++) {\n      if(this.state.validSpaces[i].column === position.column\n        && this.state.validSpaces[i].row === position.row && this.state.validSpaces[i].jump === true) {\n          return true;\n        }\n    }\n    return false;\n  }\n\n  getJumpedPiece(position) {\n    for(var i = 0; i < this.state.validSpaces.length; i++) {\n      if(this.state.validSpaces[i].column === position.column\n        && this.state.validSpaces[i].row === position.row && this.state.validSpaces[i].jump === true) {\n          return this.state.validSpaces[i].jumpedPiece;\n        }\n    }\n    return {row: -1, column: -1};\n  }\n\n  blackContains(position) {\n    for (var i = 0; i < this.state.board.black.length; i++) {\n      if (this.state.board.black[i].row === position.row && this.state.board.black[i].column === position.column) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  redContains(position) {\n    for (var i = 0; i < this.state.board.red.length; i++) {\n      if (this.state.board.red[i].row === position.row && this.state.board.red[i].column === position.column) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getValidMoves(position) {\n    var moves = [];\n    if(this.blackContains(position) || this.redContains(position)) {\n      for(var i = -1; i < 2; i++) {\n        for(var j = -1; j < 2; j++) {\n          if(i !== 0 && j !== 0) {\n            var pos = {row: position.row + i, column: position.column + j, jump: false};\n            if(!this.blackContains(pos) && !this.redContains(pos)) {\n              moves.push(pos);\n            }\n            var jumpPos = this.getValidJump(position, i, j);\n            moves.push(jumpPos);\n          }\n        }\n      }\n    }\n    return moves;\n  }\n\n  removePiece(position, black) {\n\n    if(black === true) {\n      for(var i = 0; i < this.state.board.black.length; i++) {\n        if(this.state.board.black[i].row === position.row && this.state.board.black[i].column === position.column) {\n          this.state.board.black.splice(i, 1);\n        }\n      }\n    } else {\n      for(var i = 0; i < this.state.board.red.length; i++) {\n        if(this.state.board.red[i].row === position.row && this.state.board.red[i].column === position.column) {\n          this.state.board.red.splice(i, 1);\n        }\n      }\n    }\n  }\n\n  addPiece(position, black) {\n\n    if(black === true) {\n      this.state.board.black.push(position);\n    } else {\n      this.state.board.red.push(position);\n    }\n  }\n\n  getValidJump(curPos, i, j) {\n    var newPos = {row: curPos.row + i, column: curPos.column + j};\n    var jumpPos = {row: newPos.row + i, column: newPos.column + j, jump: true, jumpedPiece: newPos};\n    if(this.blackContains(curPos)) {\n      if(this.redContains(newPos) && !this.blackContains(jumpPos) && !this.redContains(jumpPos)) {\n        return jumpPos;\n      }\n    }\n    if(this.redContains(curPos)) {\n      if(this.blackContains(newPos) && !this.blackContains(jumpPos) && !this.redContains(jumpPos)) {\n        return jumpPos;\n      }\n    }\n    return [];\n  }\n\n  checkWin(blackTurn) {\n    if (blackTurn === true) {\n      return this.state.board.red.length === 0;\n    } else {\n      return this.state.board.black.length === 0;\n    }\n  }\n\n  render() {\n    var rows = [];\n    for(var i = 0; i < 8; i++) {\n      rows.push(<Row row={i} key={i}\n        board={this.state.board}\n        handleSquareClick={this.handleSquareClick}\n        validSpaces={this.state.validSpaces} />);\n    }\n    return <div style={{border: \"1px solid black\", width: 480, margin:\"auto\"}}>{rows}</div>;\n  }\n\n}\n\nexport default Board;\n"]},"metadata":{},"sourceType":"module"}